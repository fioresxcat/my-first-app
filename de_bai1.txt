1. BAI 1

cho 1 co so du lieu ve cong dan, hay thuc cac truy van sau tren csdl nay 
INPUT
// dau vao input gom 2 phan: phan 1 chua csdl ve cong dan va phan 2 chua cac truy van. 2 phan duoc phan cach boi 1 dong chua 1 ki tu "*"
// 1. phan thu nhat
- max 100000 dong
- mỗi dòng chưa thông tin của 1 công dân với định dạng
<code> <date_of_birth> <father_code> <mother_code> <is_alive> <region_code>
trong đó:
- code là mã căn cước là xâu kí tự có độ dài 7
- date of birth ngày sinh định dạng yyyy-mm-dd (là xâu kí tự)
- father_code và mother_code là mã của bố mẹ. Nếu father_code hoặc mother_code đang là '0000000' thì nghĩa là chưa có thông tin của bố và mẹ
- is_alive: 1 kí tự nhận 2 giá trị: "Y" nếu còn sống, "N" nếu đã chết
- region_code: mã khu vực đang sinh sống

// 2. phần 2: chứa các dòng (max 10000), mỗi dòng chứa 1 loại truy vấn
NUMBER_PEOPLE: tra ve so luong cong dan trong csdl (la so dong)

NUMBER_PEOPLE_BORN_AT <date>: tra ve so luong cong dan co ngay sinh la <date>

MOST_ALIVE_ANCHESTOR <code>: tìm tổ tiên xa nhất về khoảng cách thế hệ của công dân có mã là <code>. Trả về khoảng cách thế hệ tìm được. 
ví dụ: bố mẹ và con thì là 1, ông bà và cháu thì là 2

NUMBER_PEOPLE_BORN_BETWEEN <from_date> <to_date>: tra ve so luong cong dan co ngay sinh trong khoang do

MAX_UNRELATED_PEOPLE: tìm 1 tập các công dân sao cho ko có ai trong tập này có quan hệ cha/mẹ-con và số lượng công dân trong tập là lớn nhất. Trả về số lượng công
dân có trong tập tìm được (số công dân trong dữ liệu input ko quá 20 đối với truy vấn này)

Phần thứ 2 kết thúc bởi 1 dòng chứa "***"

// OUTPUT
mỗi dòng chứa kết quả của 1 truy vấn có trong input



